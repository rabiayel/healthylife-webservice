#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebServis3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="healthylife2")]
	public partial class DataClassesLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAcilMudahale(AcilMudahale instance);
    partial void UpdateAcilMudahale(AcilMudahale instance);
    partial void DeleteAcilMudahale(AcilMudahale instance);
    partial void Insertalerji(alerji instance);
    partial void Updatealerji(alerji instance);
    partial void Deletealerji(alerji instance);
    partial void Insertapplogin(applogin instance);
    partial void Updateapplogin(applogin instance);
    partial void Deleteapplogin(applogin instance);
    partial void Inserthastalik(hastalik instance);
    partial void Updatehastalik(hastalik instance);
    partial void Deletehastalik(hastalik instance);
    partial void Insertilac(ilac instance);
    partial void Updateilac(ilac instance);
    partial void Deleteilac(ilac instance);
    partial void Insertiletisim(iletisim instance);
    partial void Updateiletisim(iletisim instance);
    partial void Deleteiletisim(iletisim instance);
    partial void InsertKimlik(Kimlik instance);
    partial void UpdateKimlik(Kimlik instance);
    partial void DeleteKimlik(Kimlik instance);
    #endregion
		
		public DataClassesLinqDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["healthylife2ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AcilMudahale> AcilMudahales
		{
			get
			{
				return this.GetTable<AcilMudahale>();
			}
		}
		
		public System.Data.Linq.Table<alerji> alerjis
		{
			get
			{
				return this.GetTable<alerji>();
			}
		}
		
		public System.Data.Linq.Table<applogin> applogins
		{
			get
			{
				return this.GetTable<applogin>();
			}
		}
		
		public System.Data.Linq.Table<hastalik> hastaliks
		{
			get
			{
				return this.GetTable<hastalik>();
			}
		}
		
		public System.Data.Linq.Table<ilac> ilacs
		{
			get
			{
				return this.GetTable<ilac>();
			}
		}
		
		public System.Data.Linq.Table<iletisim> iletisims
		{
			get
			{
				return this.GetTable<iletisim>();
			}
		}
		
		public System.Data.Linq.Table<Kimlik> Kimliks
		{
			get
			{
				return this.GetTable<Kimlik>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AcilMudahale")]
	public partial class AcilMudahale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _acilid;
		
		private int _kimlikid;
		
		private int _personelid;
		
		private string _tarih;
		
		private string _aciklama;
		
		private EntityRef<applogin> _applogin;
		
		private EntityRef<Kimlik> _Kimlik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnacilidChanging(int value);
    partial void OnacilidChanged();
    partial void OnkimlikidChanging(int value);
    partial void OnkimlikidChanged();
    partial void OnpersonelidChanging(int value);
    partial void OnpersonelidChanged();
    partial void OntarihChanging(string value);
    partial void OntarihChanged();
    partial void OnaciklamaChanging(string value);
    partial void OnaciklamaChanged();
    #endregion
		
		public AcilMudahale()
		{
			this._applogin = default(EntityRef<applogin>);
			this._Kimlik = default(EntityRef<Kimlik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acilid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int acilid
		{
			get
			{
				return this._acilid;
			}
			set
			{
				if ((this._acilid != value))
				{
					this.OnacilidChanging(value);
					this.SendPropertyChanging();
					this._acilid = value;
					this.SendPropertyChanged("acilid");
					this.OnacilidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kimlikid", DbType="Int NOT NULL")]
		public int kimlikid
		{
			get
			{
				return this._kimlikid;
			}
			set
			{
				if ((this._kimlikid != value))
				{
					if (this._Kimlik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnkimlikidChanging(value);
					this.SendPropertyChanging();
					this._kimlikid = value;
					this.SendPropertyChanged("kimlikid");
					this.OnkimlikidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personelid", DbType="Int NOT NULL")]
		public int personelid
		{
			get
			{
				return this._personelid;
			}
			set
			{
				if ((this._personelid != value))
				{
					if (this._applogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpersonelidChanging(value);
					this.SendPropertyChanging();
					this._personelid = value;
					this.SendPropertyChanged("personelid");
					this.OnpersonelidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tarih", DbType="NVarChar(50)")]
		public string tarih
		{
			get
			{
				return this._tarih;
			}
			set
			{
				if ((this._tarih != value))
				{
					this.OntarihChanging(value);
					this.SendPropertyChanging();
					this._tarih = value;
					this.SendPropertyChanged("tarih");
					this.OntarihChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aciklama", DbType="NVarChar(500)")]
		public string aciklama
		{
			get
			{
				return this._aciklama;
			}
			set
			{
				if ((this._aciklama != value))
				{
					this.OnaciklamaChanging(value);
					this.SendPropertyChanging();
					this._aciklama = value;
					this.SendPropertyChanged("aciklama");
					this.OnaciklamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="applogin_AcilMudahale", Storage="_applogin", ThisKey="personelid", OtherKey="apploginid", IsForeignKey=true)]
		public applogin applogin
		{
			get
			{
				return this._applogin.Entity;
			}
			set
			{
				applogin previousValue = this._applogin.Entity;
				if (((previousValue != value) 
							|| (this._applogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._applogin.Entity = null;
						previousValue.AcilMudahales.Remove(this);
					}
					this._applogin.Entity = value;
					if ((value != null))
					{
						value.AcilMudahales.Add(this);
						this._personelid = value.apploginid;
					}
					else
					{
						this._personelid = default(int);
					}
					this.SendPropertyChanged("applogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kimlik_AcilMudahale", Storage="_Kimlik", ThisKey="kimlikid", OtherKey="kimlikid", IsForeignKey=true)]
		public Kimlik Kimlik
		{
			get
			{
				return this._Kimlik.Entity;
			}
			set
			{
				Kimlik previousValue = this._Kimlik.Entity;
				if (((previousValue != value) 
							|| (this._Kimlik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kimlik.Entity = null;
						previousValue.AcilMudahales.Remove(this);
					}
					this._Kimlik.Entity = value;
					if ((value != null))
					{
						value.AcilMudahales.Add(this);
						this._kimlikid = value.kimlikid;
					}
					else
					{
						this._kimlikid = default(int);
					}
					this.SendPropertyChanged("Kimlik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.alerji")]
	public partial class alerji : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _alerjid;
		
		private string _alerjiad;
		
		private System.Nullable<int> _kimlikid;
		
		private EntityRef<Kimlik> _Kimlik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnalerjidChanging(int value);
    partial void OnalerjidChanged();
    partial void OnalerjiadChanging(string value);
    partial void OnalerjiadChanged();
    partial void OnkimlikidChanging(System.Nullable<int> value);
    partial void OnkimlikidChanged();
    #endregion
		
		public alerji()
		{
			this._Kimlik = default(EntityRef<Kimlik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alerjid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int alerjid
		{
			get
			{
				return this._alerjid;
			}
			set
			{
				if ((this._alerjid != value))
				{
					this.OnalerjidChanging(value);
					this.SendPropertyChanging();
					this._alerjid = value;
					this.SendPropertyChanged("alerjid");
					this.OnalerjidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alerjiad", DbType="NVarChar(500)")]
		public string alerjiad
		{
			get
			{
				return this._alerjiad;
			}
			set
			{
				if ((this._alerjiad != value))
				{
					this.OnalerjiadChanging(value);
					this.SendPropertyChanging();
					this._alerjiad = value;
					this.SendPropertyChanged("alerjiad");
					this.OnalerjiadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kimlikid", DbType="Int")]
		public System.Nullable<int> kimlikid
		{
			get
			{
				return this._kimlikid;
			}
			set
			{
				if ((this._kimlikid != value))
				{
					if (this._Kimlik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnkimlikidChanging(value);
					this.SendPropertyChanging();
					this._kimlikid = value;
					this.SendPropertyChanged("kimlikid");
					this.OnkimlikidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kimlik_alerji", Storage="_Kimlik", ThisKey="kimlikid", OtherKey="kimlikid", IsForeignKey=true)]
		public Kimlik Kimlik
		{
			get
			{
				return this._Kimlik.Entity;
			}
			set
			{
				Kimlik previousValue = this._Kimlik.Entity;
				if (((previousValue != value) 
							|| (this._Kimlik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kimlik.Entity = null;
						previousValue.alerjis.Remove(this);
					}
					this._Kimlik.Entity = value;
					if ((value != null))
					{
						value.alerjis.Add(this);
						this._kimlikid = value.kimlikid;
					}
					else
					{
						this._kimlikid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kimlik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.applogin")]
	public partial class applogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _apploginid;
		
		private System.Nullable<int> _kimlikid;
		
		private string _yetki;
		
		private string _sifre;
		
		private EntitySet<AcilMudahale> _AcilMudahales;
		
		private EntityRef<Kimlik> _Kimlik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnapploginidChanging(int value);
    partial void OnapploginidChanged();
    partial void OnkimlikidChanging(System.Nullable<int> value);
    partial void OnkimlikidChanged();
    partial void OnyetkiChanging(string value);
    partial void OnyetkiChanged();
    partial void OnsifreChanging(string value);
    partial void OnsifreChanged();
    #endregion
		
		public applogin()
		{
			this._AcilMudahales = new EntitySet<AcilMudahale>(new Action<AcilMudahale>(this.attach_AcilMudahales), new Action<AcilMudahale>(this.detach_AcilMudahales));
			this._Kimlik = default(EntityRef<Kimlik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apploginid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int apploginid
		{
			get
			{
				return this._apploginid;
			}
			set
			{
				if ((this._apploginid != value))
				{
					this.OnapploginidChanging(value);
					this.SendPropertyChanging();
					this._apploginid = value;
					this.SendPropertyChanged("apploginid");
					this.OnapploginidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kimlikid", DbType="Int")]
		public System.Nullable<int> kimlikid
		{
			get
			{
				return this._kimlikid;
			}
			set
			{
				if ((this._kimlikid != value))
				{
					if (this._Kimlik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnkimlikidChanging(value);
					this.SendPropertyChanging();
					this._kimlikid = value;
					this.SendPropertyChanged("kimlikid");
					this.OnkimlikidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yetki", DbType="NVarChar(500)")]
		public string yetki
		{
			get
			{
				return this._yetki;
			}
			set
			{
				if ((this._yetki != value))
				{
					this.OnyetkiChanging(value);
					this.SendPropertyChanging();
					this._yetki = value;
					this.SendPropertyChanged("yetki");
					this.OnyetkiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sifre", DbType="NVarChar(50)")]
		public string sifre
		{
			get
			{
				return this._sifre;
			}
			set
			{
				if ((this._sifre != value))
				{
					this.OnsifreChanging(value);
					this.SendPropertyChanging();
					this._sifre = value;
					this.SendPropertyChanged("sifre");
					this.OnsifreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="applogin_AcilMudahale", Storage="_AcilMudahales", ThisKey="apploginid", OtherKey="personelid")]
		public EntitySet<AcilMudahale> AcilMudahales
		{
			get
			{
				return this._AcilMudahales;
			}
			set
			{
				this._AcilMudahales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kimlik_applogin", Storage="_Kimlik", ThisKey="kimlikid", OtherKey="kimlikid", IsForeignKey=true)]
		public Kimlik Kimlik
		{
			get
			{
				return this._Kimlik.Entity;
			}
			set
			{
				Kimlik previousValue = this._Kimlik.Entity;
				if (((previousValue != value) 
							|| (this._Kimlik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kimlik.Entity = null;
						previousValue.applogins.Remove(this);
					}
					this._Kimlik.Entity = value;
					if ((value != null))
					{
						value.applogins.Add(this);
						this._kimlikid = value.kimlikid;
					}
					else
					{
						this._kimlikid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kimlik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AcilMudahales(AcilMudahale entity)
		{
			this.SendPropertyChanging();
			entity.applogin = this;
		}
		
		private void detach_AcilMudahales(AcilMudahale entity)
		{
			this.SendPropertyChanging();
			entity.applogin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hastalik")]
	public partial class hastalik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hastalikid;
		
		private string _hastalikad;
		
		private System.Nullable<int> _kimlikid;
		
		private EntityRef<Kimlik> _Kimlik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhastalikidChanging(int value);
    partial void OnhastalikidChanged();
    partial void OnhastalikadChanging(string value);
    partial void OnhastalikadChanged();
    partial void OnkimlikidChanging(System.Nullable<int> value);
    partial void OnkimlikidChanged();
    #endregion
		
		public hastalik()
		{
			this._Kimlik = default(EntityRef<Kimlik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hastalikid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int hastalikid
		{
			get
			{
				return this._hastalikid;
			}
			set
			{
				if ((this._hastalikid != value))
				{
					this.OnhastalikidChanging(value);
					this.SendPropertyChanging();
					this._hastalikid = value;
					this.SendPropertyChanged("hastalikid");
					this.OnhastalikidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hastalikad", DbType="NVarChar(500)")]
		public string hastalikad
		{
			get
			{
				return this._hastalikad;
			}
			set
			{
				if ((this._hastalikad != value))
				{
					this.OnhastalikadChanging(value);
					this.SendPropertyChanging();
					this._hastalikad = value;
					this.SendPropertyChanged("hastalikad");
					this.OnhastalikadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kimlikid", DbType="Int")]
		public System.Nullable<int> kimlikid
		{
			get
			{
				return this._kimlikid;
			}
			set
			{
				if ((this._kimlikid != value))
				{
					if (this._Kimlik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnkimlikidChanging(value);
					this.SendPropertyChanging();
					this._kimlikid = value;
					this.SendPropertyChanged("kimlikid");
					this.OnkimlikidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kimlik_hastalik", Storage="_Kimlik", ThisKey="kimlikid", OtherKey="kimlikid", IsForeignKey=true)]
		public Kimlik Kimlik
		{
			get
			{
				return this._Kimlik.Entity;
			}
			set
			{
				Kimlik previousValue = this._Kimlik.Entity;
				if (((previousValue != value) 
							|| (this._Kimlik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kimlik.Entity = null;
						previousValue.hastaliks.Remove(this);
					}
					this._Kimlik.Entity = value;
					if ((value != null))
					{
						value.hastaliks.Add(this);
						this._kimlikid = value.kimlikid;
					}
					else
					{
						this._kimlikid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kimlik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ilac")]
	public partial class ilac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ilacid;
		
		private string _ilacad;
		
		private System.Nullable<int> _kimlikid;
		
		private EntityRef<Kimlik> _Kimlik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnilacidChanging(int value);
    partial void OnilacidChanged();
    partial void OnilacadChanging(string value);
    partial void OnilacadChanged();
    partial void OnkimlikidChanging(System.Nullable<int> value);
    partial void OnkimlikidChanged();
    #endregion
		
		public ilac()
		{
			this._Kimlik = default(EntityRef<Kimlik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ilacid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ilacid
		{
			get
			{
				return this._ilacid;
			}
			set
			{
				if ((this._ilacid != value))
				{
					this.OnilacidChanging(value);
					this.SendPropertyChanging();
					this._ilacid = value;
					this.SendPropertyChanged("ilacid");
					this.OnilacidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ilacad", DbType="NVarChar(500)")]
		public string ilacad
		{
			get
			{
				return this._ilacad;
			}
			set
			{
				if ((this._ilacad != value))
				{
					this.OnilacadChanging(value);
					this.SendPropertyChanging();
					this._ilacad = value;
					this.SendPropertyChanged("ilacad");
					this.OnilacadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kimlikid", DbType="Int")]
		public System.Nullable<int> kimlikid
		{
			get
			{
				return this._kimlikid;
			}
			set
			{
				if ((this._kimlikid != value))
				{
					if (this._Kimlik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnkimlikidChanging(value);
					this.SendPropertyChanging();
					this._kimlikid = value;
					this.SendPropertyChanged("kimlikid");
					this.OnkimlikidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kimlik_ilac", Storage="_Kimlik", ThisKey="kimlikid", OtherKey="kimlikid", IsForeignKey=true)]
		public Kimlik Kimlik
		{
			get
			{
				return this._Kimlik.Entity;
			}
			set
			{
				Kimlik previousValue = this._Kimlik.Entity;
				if (((previousValue != value) 
							|| (this._Kimlik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kimlik.Entity = null;
						previousValue.ilacs.Remove(this);
					}
					this._Kimlik.Entity = value;
					if ((value != null))
					{
						value.ilacs.Add(this);
						this._kimlikid = value.kimlikid;
					}
					else
					{
						this._kimlikid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kimlik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.iletisim")]
	public partial class iletisim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iletisimid;
		
		private System.Nullable<int> _kimlikid;
		
		private string _telefon;
		
		private string _mail;
		
		private string _yakinad;
		
		private string _yakinsoyad;
		
		private string _yakintel;
		
		private string _yakinderece;
		
		private string _adres;
		
		private EntityRef<Kimlik> _Kimlik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniletisimidChanging(int value);
    partial void OniletisimidChanged();
    partial void OnkimlikidChanging(System.Nullable<int> value);
    partial void OnkimlikidChanged();
    partial void OntelefonChanging(string value);
    partial void OntelefonChanged();
    partial void OnmailChanging(string value);
    partial void OnmailChanged();
    partial void OnyakinadChanging(string value);
    partial void OnyakinadChanged();
    partial void OnyakinsoyadChanging(string value);
    partial void OnyakinsoyadChanged();
    partial void OnyakintelChanging(string value);
    partial void OnyakintelChanged();
    partial void OnyakindereceChanging(string value);
    partial void OnyakindereceChanged();
    partial void OnadresChanging(string value);
    partial void OnadresChanged();
    #endregion
		
		public iletisim()
		{
			this._Kimlik = default(EntityRef<Kimlik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iletisimid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int iletisimid
		{
			get
			{
				return this._iletisimid;
			}
			set
			{
				if ((this._iletisimid != value))
				{
					this.OniletisimidChanging(value);
					this.SendPropertyChanging();
					this._iletisimid = value;
					this.SendPropertyChanged("iletisimid");
					this.OniletisimidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kimlikid", DbType="Int")]
		public System.Nullable<int> kimlikid
		{
			get
			{
				return this._kimlikid;
			}
			set
			{
				if ((this._kimlikid != value))
				{
					if (this._Kimlik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnkimlikidChanging(value);
					this.SendPropertyChanging();
					this._kimlikid = value;
					this.SendPropertyChanged("kimlikid");
					this.OnkimlikidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefon", DbType="NVarChar(50)")]
		public string telefon
		{
			get
			{
				return this._telefon;
			}
			set
			{
				if ((this._telefon != value))
				{
					this.OntelefonChanging(value);
					this.SendPropertyChanging();
					this._telefon = value;
					this.SendPropertyChanged("telefon");
					this.OntelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail", DbType="NVarChar(100)")]
		public string mail
		{
			get
			{
				return this._mail;
			}
			set
			{
				if ((this._mail != value))
				{
					this.OnmailChanging(value);
					this.SendPropertyChanging();
					this._mail = value;
					this.SendPropertyChanged("mail");
					this.OnmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yakinad", DbType="NVarChar(100)")]
		public string yakinad
		{
			get
			{
				return this._yakinad;
			}
			set
			{
				if ((this._yakinad != value))
				{
					this.OnyakinadChanging(value);
					this.SendPropertyChanging();
					this._yakinad = value;
					this.SendPropertyChanged("yakinad");
					this.OnyakinadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yakinsoyad", DbType="NVarChar(100)")]
		public string yakinsoyad
		{
			get
			{
				return this._yakinsoyad;
			}
			set
			{
				if ((this._yakinsoyad != value))
				{
					this.OnyakinsoyadChanging(value);
					this.SendPropertyChanging();
					this._yakinsoyad = value;
					this.SendPropertyChanged("yakinsoyad");
					this.OnyakinsoyadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yakintel", DbType="NVarChar(100)")]
		public string yakintel
		{
			get
			{
				return this._yakintel;
			}
			set
			{
				if ((this._yakintel != value))
				{
					this.OnyakintelChanging(value);
					this.SendPropertyChanging();
					this._yakintel = value;
					this.SendPropertyChanged("yakintel");
					this.OnyakintelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yakinderece", DbType="NVarChar(100)")]
		public string yakinderece
		{
			get
			{
				return this._yakinderece;
			}
			set
			{
				if ((this._yakinderece != value))
				{
					this.OnyakindereceChanging(value);
					this.SendPropertyChanging();
					this._yakinderece = value;
					this.SendPropertyChanged("yakinderece");
					this.OnyakindereceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adres", DbType="NVarChar(500)")]
		public string adres
		{
			get
			{
				return this._adres;
			}
			set
			{
				if ((this._adres != value))
				{
					this.OnadresChanging(value);
					this.SendPropertyChanging();
					this._adres = value;
					this.SendPropertyChanged("adres");
					this.OnadresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kimlik_iletisim", Storage="_Kimlik", ThisKey="kimlikid", OtherKey="kimlikid", IsForeignKey=true)]
		public Kimlik Kimlik
		{
			get
			{
				return this._Kimlik.Entity;
			}
			set
			{
				Kimlik previousValue = this._Kimlik.Entity;
				if (((previousValue != value) 
							|| (this._Kimlik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kimlik.Entity = null;
						previousValue.iletisims.Remove(this);
					}
					this._Kimlik.Entity = value;
					if ((value != null))
					{
						value.iletisims.Add(this);
						this._kimlikid = value.kimlikid;
					}
					else
					{
						this._kimlikid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kimlik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kimlik")]
	public partial class Kimlik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _kimlikid;
		
		private string _tcno;
		
		private string _ad;
		
		private string _soyad;
		
		private string _dtarih;
		
		private string _sehir;
		
		private string _kangrubu;
		
		private EntitySet<AcilMudahale> _AcilMudahales;
		
		private EntitySet<alerji> _alerjis;
		
		private EntitySet<applogin> _applogins;
		
		private EntitySet<hastalik> _hastaliks;
		
		private EntitySet<ilac> _ilacs;
		
		private EntitySet<iletisim> _iletisims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnkimlikidChanging(int value);
    partial void OnkimlikidChanged();
    partial void OntcnoChanging(string value);
    partial void OntcnoChanged();
    partial void OnadChanging(string value);
    partial void OnadChanged();
    partial void OnsoyadChanging(string value);
    partial void OnsoyadChanged();
    partial void OndtarihChanging(string value);
    partial void OndtarihChanged();
    partial void OnsehirChanging(string value);
    partial void OnsehirChanged();
    partial void OnkangrubuChanging(string value);
    partial void OnkangrubuChanged();
    #endregion
		
		public Kimlik()
		{
			this._AcilMudahales = new EntitySet<AcilMudahale>(new Action<AcilMudahale>(this.attach_AcilMudahales), new Action<AcilMudahale>(this.detach_AcilMudahales));
			this._alerjis = new EntitySet<alerji>(new Action<alerji>(this.attach_alerjis), new Action<alerji>(this.detach_alerjis));
			this._applogins = new EntitySet<applogin>(new Action<applogin>(this.attach_applogins), new Action<applogin>(this.detach_applogins));
			this._hastaliks = new EntitySet<hastalik>(new Action<hastalik>(this.attach_hastaliks), new Action<hastalik>(this.detach_hastaliks));
			this._ilacs = new EntitySet<ilac>(new Action<ilac>(this.attach_ilacs), new Action<ilac>(this.detach_ilacs));
			this._iletisims = new EntitySet<iletisim>(new Action<iletisim>(this.attach_iletisims), new Action<iletisim>(this.detach_iletisims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kimlikid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int kimlikid
		{
			get
			{
				return this._kimlikid;
			}
			set
			{
				if ((this._kimlikid != value))
				{
					this.OnkimlikidChanging(value);
					this.SendPropertyChanging();
					this._kimlikid = value;
					this.SendPropertyChanged("kimlikid");
					this.OnkimlikidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tcno", DbType="NVarChar(11)")]
		public string tcno
		{
			get
			{
				return this._tcno;
			}
			set
			{
				if ((this._tcno != value))
				{
					this.OntcnoChanging(value);
					this.SendPropertyChanging();
					this._tcno = value;
					this.SendPropertyChanged("tcno");
					this.OntcnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ad", DbType="NVarChar(100)")]
		public string ad
		{
			get
			{
				return this._ad;
			}
			set
			{
				if ((this._ad != value))
				{
					this.OnadChanging(value);
					this.SendPropertyChanging();
					this._ad = value;
					this.SendPropertyChanged("ad");
					this.OnadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soyad", DbType="NVarChar(100)")]
		public string soyad
		{
			get
			{
				return this._soyad;
			}
			set
			{
				if ((this._soyad != value))
				{
					this.OnsoyadChanging(value);
					this.SendPropertyChanging();
					this._soyad = value;
					this.SendPropertyChanged("soyad");
					this.OnsoyadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtarih", DbType="NVarChar(50)")]
		public string dtarih
		{
			get
			{
				return this._dtarih;
			}
			set
			{
				if ((this._dtarih != value))
				{
					this.OndtarihChanging(value);
					this.SendPropertyChanging();
					this._dtarih = value;
					this.SendPropertyChanged("dtarih");
					this.OndtarihChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sehir", DbType="NVarChar(50)")]
		public string sehir
		{
			get
			{
				return this._sehir;
			}
			set
			{
				if ((this._sehir != value))
				{
					this.OnsehirChanging(value);
					this.SendPropertyChanging();
					this._sehir = value;
					this.SendPropertyChanged("sehir");
					this.OnsehirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kangrubu", DbType="NVarChar(50)")]
		public string kangrubu
		{
			get
			{
				return this._kangrubu;
			}
			set
			{
				if ((this._kangrubu != value))
				{
					this.OnkangrubuChanging(value);
					this.SendPropertyChanging();
					this._kangrubu = value;
					this.SendPropertyChanged("kangrubu");
					this.OnkangrubuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kimlik_AcilMudahale", Storage="_AcilMudahales", ThisKey="kimlikid", OtherKey="kimlikid")]
		public EntitySet<AcilMudahale> AcilMudahales
		{
			get
			{
				return this._AcilMudahales;
			}
			set
			{
				this._AcilMudahales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kimlik_alerji", Storage="_alerjis", ThisKey="kimlikid", OtherKey="kimlikid")]
		public EntitySet<alerji> alerjis
		{
			get
			{
				return this._alerjis;
			}
			set
			{
				this._alerjis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kimlik_applogin", Storage="_applogins", ThisKey="kimlikid", OtherKey="kimlikid")]
		public EntitySet<applogin> applogins
		{
			get
			{
				return this._applogins;
			}
			set
			{
				this._applogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kimlik_hastalik", Storage="_hastaliks", ThisKey="kimlikid", OtherKey="kimlikid")]
		public EntitySet<hastalik> hastaliks
		{
			get
			{
				return this._hastaliks;
			}
			set
			{
				this._hastaliks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kimlik_ilac", Storage="_ilacs", ThisKey="kimlikid", OtherKey="kimlikid")]
		public EntitySet<ilac> ilacs
		{
			get
			{
				return this._ilacs;
			}
			set
			{
				this._ilacs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kimlik_iletisim", Storage="_iletisims", ThisKey="kimlikid", OtherKey="kimlikid")]
		public EntitySet<iletisim> iletisims
		{
			get
			{
				return this._iletisims;
			}
			set
			{
				this._iletisims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AcilMudahales(AcilMudahale entity)
		{
			this.SendPropertyChanging();
			entity.Kimlik = this;
		}
		
		private void detach_AcilMudahales(AcilMudahale entity)
		{
			this.SendPropertyChanging();
			entity.Kimlik = null;
		}
		
		private void attach_alerjis(alerji entity)
		{
			this.SendPropertyChanging();
			entity.Kimlik = this;
		}
		
		private void detach_alerjis(alerji entity)
		{
			this.SendPropertyChanging();
			entity.Kimlik = null;
		}
		
		private void attach_applogins(applogin entity)
		{
			this.SendPropertyChanging();
			entity.Kimlik = this;
		}
		
		private void detach_applogins(applogin entity)
		{
			this.SendPropertyChanging();
			entity.Kimlik = null;
		}
		
		private void attach_hastaliks(hastalik entity)
		{
			this.SendPropertyChanging();
			entity.Kimlik = this;
		}
		
		private void detach_hastaliks(hastalik entity)
		{
			this.SendPropertyChanging();
			entity.Kimlik = null;
		}
		
		private void attach_ilacs(ilac entity)
		{
			this.SendPropertyChanging();
			entity.Kimlik = this;
		}
		
		private void detach_ilacs(ilac entity)
		{
			this.SendPropertyChanging();
			entity.Kimlik = null;
		}
		
		private void attach_iletisims(iletisim entity)
		{
			this.SendPropertyChanging();
			entity.Kimlik = this;
		}
		
		private void detach_iletisims(iletisim entity)
		{
			this.SendPropertyChanging();
			entity.Kimlik = null;
		}
	}
}
#pragma warning restore 1591
